import React from "react";
import { Check, ChevronDown } from "lucide-react";

import { cn } from "../../../../lib/utils";
import { Button } from "../../../ui/button";
import {
  Command,
  CommandEmpty,
  CommandGroup,
  CommandInput,
  CommandItem,
  CommandList,
} from "../../../ui/command";
import { Popover, PopoverContent, PopoverTrigger } from "../../../ui/popover";

const data = [
  {
    value: "X√≥a ngh√®o",
    label: "X√≥a ngh√®o",
  },
  {
    value: "B·ªánh Hi·ªÉm Ngh√®o",
    label: "B·ªánh Hi·ªÉm Ngh√®o",
  },
  {
    value: "Ng∆∞·ªùi T√†n T·∫≠t",
    label: "Ng∆∞·ªùi T√†n T·∫≠t",
  },
  {
    value: "Tr·∫ª Em",
    label: "Tr·∫ª Em",
  },
  {
    value: "Ng∆∞·ªùi V√¥ Gia C∆∞",
    label: "Ng∆∞·ªùi V√¥ Gia C∆∞",
  },
];

const CustomComboboxCategory = () => {
  const [open, setOpen] = React.useState(false);
  const [value, setValue] = React.useState("");
  return (
    <>
      <Popover open={open} onOpenChange={setOpen}>
        <PopoverTrigger asChild>
          <Button
            variant="outline"
            role="combobox"
            aria-expanded={open}
            className="justify-between"
          >
            {value
              ? data.find((item) => item.value === value)?.label
              : "Ch·ªçn danh m·ª•c chi·∫øn d·ªãch"}
            <ChevronDown className="ml-2 h-4 w-4 shrink-0 opacity-50" />
          </Button>
        </PopoverTrigger>
        <PopoverContent className="p-0">
          <Command>
            <CommandInput placeholder="T√¨m ki·∫øm danh m·ª•c..." />
            <CommandEmpty>Kh√¥ng t√¨m ƒë∆∞·ª£c danh m·ª•c chi·∫øn d·ªãch üò•</CommandEmpty>
            <CommandGroup>
              <CommandList>
                {data.map((item) => (
                  <CommandItem
                    key={item.value}
                    value={item.value}
                    onSelect={(currentValue) => {
                      setValue(currentValue === value ? "" : currentValue);
                      setOpen(false);
                    }}
                  >
                    <Check
                      className={cn(
                        "mr-2 h-4 w-4",
                        value === item.value ? "opacity-100" : "opacity-0"
                      )}
                    />
                    {item.label}
                  </CommandItem>
                ))}
              </CommandList>
            </CommandGroup>
          </Command>
        </PopoverContent>
      </Popover>
    </>
  );
};

export default CustomComboboxCategory;
